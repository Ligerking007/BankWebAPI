@model BankWebAPI.Models.CustomerAccount.DetailsViewModel
@{ ViewData["Title"] = Model.CustomerAccountModel.AccountNo; }

<div class="card mb-6">
    <div class="card-body hover-parent">
        <h2 class="card-title text-center">
            <span id="accountName">@Model.CustomerAccountModel.FullName</span>
            <i class="fas fa-pen fa-xs cursor-pointer hover-visible text-muted text-primary-hover"
               data-toggle="modal" data-target="#editModal">
            </i>
        </h2>

        <div class="row">
            <div class="col-lg">
            </div>
            <div class="col-lg-6">
                <h5 class="text-center">Account details</h5>

                <div class="d-flex flex-row justify-content-between">
                    <p>ID Card / Passport</p>
                    <p class="ml-3"> <span id="idCardOrPassport">@Model.CustomerAccountModel.IdCardPassport</span></p>
                </div>
                <div class="d-flex flex-row justify-content-between">
                    <p>Current balance</p>
                    <p class="text-green ml-3">฿@Model.CustomerAccountModel.Balance.ToString("#,##0.00")</p>
                </div>
                <div class="d-flex flex-row justify-content-between">
                    <p>Account number</p>
                    <p class="ml-3">@Model.CustomerAccountModel.AccountNo</p>
                </div>
                <div class="d-flex flex-row justify-content-between">
                    <p>IBAN number</p>
                    <p class="ml-3">@Model.CustomerAccountModel.IbanNo</p>
                </div>
                <div class="d-flex flex-row justify-content-between">
                    <p>Date of creation</p>
                    <p class="ml-3">@Model.CustomerAccountModel.CreatedDate.ToString("dd/MM/yyyy HH:mm")</p>
                </div>

            </div>
            <div class="col-lg">
            </div>
        </div>

    </div>
</div>

<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit account details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <input type="hidden" name="accountId" value="@Model.CustomerAccountModel.Id">
                    <div class="form-group">
                        <label>Name</label>
                        <input required class="form-control" type="text" name="name">
                    </div>
                    <div class="form-group">
                        <label>
                            ID Card / Passport
                        </label>
                        <input required class="form-control" type="text" name="idCardPassport" />

                    </div>
                    <div class="text-center d-flex justify-content-between">
                        <button type="button" class="btn btn-secondary mr-auto" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">OK</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<br />
<partial name="_TransactionPartial" />

@section Scripts
{
    <script>

                var grid = $('#trans').DataTable({
            "serverSide": true,
                    "paging": true,
                    "searching": true,
            "ordering": true,
            //"info": false,
            "processing": true,
            //responsive: true,
            "scrollCollapse": true,
            "scrollX": true,
                    //"deferLoading": 10,
                    //"deferRender": true,
            ajax: {
                url: '@Url.Action("GetTransactionList", "CustomerAccount")',
                type: 'POST',
                data: function (d) {
                    //debugger;
                    var model = $.extend({}, GetFilterGrid(), DataTableModel(d));
                    // LoadingTools.unblockUI();
                    return model;
                },
                    },
                    "order": [[0, "desc"]],
            "columns":
                [

                    {
                        "title": "No",
                        render: function (data, type, row, meta) {
                            //console.log(row);
                            return meta.row + meta.settings._iDisplayStart + 1;
                        },
                        "name": "Id",
                        "className": "text-center",
                        //"orderable": false,
                    },
                    {
                        "title": "Action Type",
                        //"data": "actionType",
                         "name": "ActionType",
                        render: function (data, type, row) {
                            if (row.actionType == 'D') return "Deposit";
                            else if (row.actionType == 'W') return "Withdraw";
                            else if (row.actionType == 'T') return "Transfer";
                        },
                        "className": "text-center",

                    },
                    {
                        "title": "Source No",
                        "data": "sourceNo",
                        "name": "SourceNo",
                        "className": "text-center",

                    },
                    {
                        "title": "Destination No",
                        "data": "destinationNo",
                        "name": "DestinationNo",
                        "className": "text-center"
                    },
                    {
                        "title": "Amount",
                        //"data": "amount",
                        "name": "Amount",
                        "render": function (data, type, row) {
                            return numeral(row.amount).format('0,0.00');

                        },
                        "className": "text-right",
                    },
                    {
                        "title": "Fee Percent",
                        //"data": "feePercent",
                        "name": "FeePercent",
                        "render": function (data, type, row) {
                            return numeral(row.feePercent).format('0,0.00');

                        },
                        "className": "text-right",

                    },
                    {
                        "title": "Fee Amount",
                        //"data": "feeAmount",
                        "name": "FeeAmount",
                        "render": function (data, type, row) {
                            return numeral(row.feeAmount).format('0,0.00');

                        },
                        "className": "text-right",

                    }
                    , {
                        "title": "Net Amount",
                        //"data": "netAmount",
                        "name": "NetAmount",
                        "render": function (data, type, row) {
                            return numeral(row.netAmount).format('0,0.00');

                        },
                        "className": "text-right",

                    },
                    {
                        "title": "Action Date",
                       // "data": "actionDate",
                        "name": "ActionDate",
                        "render": function (data, type, row) {
                            return row.actionDate == null ? "" : moment(row.actionDate, "YYYY-MM-DDThh:mm:ss").format('DD/MM/YYYY HH:mm');

                        },
                        "className": "text-center",
                        "autoWidth": true
                        //"width": "120"
                    },
                    {
                        "title": "Action By",
                        "data": "actionBy",
                        "name": "ActionBy",
                        "className": "text-center",

                    },
                    {
                        "title": "Description",
                        "data": "description",
                        "name": "Description",
                        "className": "text-left",

                    },
                    {
                        "title": "ReferenceNo",
                        "data": "referenceNo",
                        "name": "ReferenceNo",
                        "className": "text-left",

                    },
                    //{
                    //    "title": "Action",
                    //    "className": "text-center",
                    //    "render": function (data, type, row) {
                    //        //console.log(row)
                    //        var txt = "";
                    //        txt += "<a class='btn btn-sm btn-default btnEdit'><i class='fa fa-edit'></i></a> &nbsp;";
                    //        txt += "<a class='btn btn-sm btn-default btnDelete'><i class='fa fa-trash'></i></a>";
                    //        return txt;
                    //    },
                    //    "width": "80"
                    //},
                ]
                });
        grid.page('first');
        grid.ajax.reload(null, false);
        function GetFilterGrid() {
            return {
                Id: '@Model.CustomerAccountModel.Id',
            }
            };

        $('#editModal').on('show.bs.modal',
            function() {
                let _modal = $(this);
                let _name = $('#accountName').text();
                let _idCardPassport = $('#idCardOrPassport').text();
                _modal.find('.modal-body input[name=name]').val(_name);
                _modal.find('.modal-body input[name=idCardPassport]').val(_idCardPassport);
            });

        $('#editModal').on('shown.bs.modal',
            function() {
                $(this).find('.modal-body input[name=name]').trigger('focus');
            });

        $('#editModal form').submit(function(event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("UpdateAccount", "CustomerAccount")',
                type: 'post',
                data: $(event.target).serialize()

            }).always(function() {
                $('#editModal').modal('hide');
            }).done(function(response) {
                if (!response.success) {
                    return;
                }

                let _newName = $('#editModal input[name=name]').val();
                let _newIdCard = $('#editModal input[name=idCardPassport]').val();
                $('#accountName').text(_newName);
                $('#idCardOrPassport').text(_newIdCard);

            });
        });
    </script>
}